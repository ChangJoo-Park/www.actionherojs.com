
          window.__NEXT_REGISTER_PAGE('/docs/core/cli', function() {
            var comp = module.exports=webpackJsonp([31],{1206:function(e,t,n){e.exports=n(1207)},1207:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var a=n(9),r=l(a),i=n(1),o=l(i),u=n(8),s=l(u),c=n(2),d=l(c),f=n(3),m=l(f),h=n(0),p=l(h),E=n(16),k=l(E),y=n(11),v=n(14),x=l(v),w=n(18),b=l(w),g=function(e){function t(e){(0,o.default)(this,t);var n=(0,d.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e));return n.state={titleSection:{title:"Core: CLI",icon:"/static/images/ops-tools.svg"},sections:{overview:"Overview",syntax:"Syntax"},links:[{link:"/docs/core/action-cluster",title:"» Core: Action Cluster"},{link:"/docs/core/initializers",title:"« Core: Initializers"}]},n}return(0,m.default)(t,e),(0,s.default)(t,[{key:"render",value:function(){return p.default.createElement(x.default,{sideNav:this.state.sections,titleSection:this.state.titleSection,links:this.state.links,currentSection:this.state.currentSection},p.default.createElement(y.Row,null,p.default.createElement(y.Col,{md:12},this.section("overview",p.default.createElement("div",null,p.default.createElement("p",null,"Allow actionhero developers to create new files in ",p.default.createElement("code",null,"./bin")," which can be run via the CLI.  These commands will have access to a the ActionHero ",p.default.createElement("code",null,"api")," and CLI arguments object within a ",p.default.createElement("code",null,"run")," method."),p.default.createElement("p",null,"You can create namespaces for commands by using folders.  For example, a file in ",p.default.createElement("code",null,"./bin/redis/keys")," would be run via ",p.default.createElement("code",null,"./node_modules/.bin/actionhero redis keys --prefix actionhero")),p.default.createElement(b.default,null,"// A CLI Command\n\nmodule.exports = {\n  name: 'redis keys',\n  description: 'I list all the keys in redis',\n  example: 'actionhero keys --prefix actionhero',\n\n  inputs: {\n    prefix: {\n      requried: true,\n      default: 'actionhero',\n      note: 'the redis prefix for searching keys'\n    }\n  },\n\n  run: function (api, data, next) {\n    api.redis.clients.client.keys(data.params.prefix, (error, keys) => {\n      if (error) { throw error }\n\n      api.log('Found ' + keys.length + 'keys:')\n      keys.forEach((k) => { api.log(k) })\n\n      return next(null, true)\n    })\n  }\n}\n"))),this.section("syntax",p.default.createElement("div",null,p.default.createElement("p",null,"ActionHero CLI commands have:"),p.default.createElement("ul",null,p.default.createElement("li",null,"name"),p.default.createElement("li",null,"description"),p.default.createElement("li",null,"example")),p.default.createElement("p",null,"Inputs for CLI commands have:"),p.default.createElement("ul",null,p.default.createElement("li",null,"required (true/false)"),p.default.createElement("li",null,"default (string only)"),p.default.createElement("li",null,"note")),p.default.createElement("p",null,"These are sourced by `actionhero help`, and the example above would return:"),p.default.createElement(b.default,{language:"bash"},"* redis keys\n  description: I list all the keys in redis\n  example: actionhero keys --prefix actionhero\n  inputs:\n    [prefix] (optional)\n      note: the redis prefix for searching keys\n      default: actionhero"))))))}}]),t}(k.default);t.default=g}},[1206]);
            return { page: comp.default }
          })
        