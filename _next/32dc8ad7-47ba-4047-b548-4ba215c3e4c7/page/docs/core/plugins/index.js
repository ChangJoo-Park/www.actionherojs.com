
          window.__NEXT_REGISTER_PAGE('/docs/core/plugins', function() {
            var comp = module.exports=webpackJsonp([23],{1222:function(e,t,l){e.exports=l(1223)},1223:function(e,t,l){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=l(9),i=a(n),o=l(1),u=a(o),r=l(8),c=a(r),s=l(2),d=a(s),f=l(3),m=a(f),h=l(0),p=a(h),g=l(16),E=a(g),v=l(11),y=l(14),w=a(y),b=l(18),k=a(b),P=function(e){function t(e){(0,u.default)(this,t);var l=(0,d.default)(this,(t.__proto__||(0,i.default)(t)).call(this,e));return l.state={titleSection:{title:"Core: Plugins",icon:"/static/images/ops-tools.svg"},sections:{overview:"Overview",creating:"Creating Plugins",methods:"Plugin Methods",examples:"Example Plugins",published:"Published Plugins"},links:[{link:"/docs/core/servers",title:"» Core: Servers"},{link:"/docs/core/logging",title:"« Core: Logging"}]},l}return(0,m.default)(t,e),(0,c.default)(t,[{key:"render",value:function(){return p.default.createElement(w.default,{sideNav:this.state.sections,titleSection:this.state.titleSection,links:this.state.links,currentSection:this.state.currentSection},p.default.createElement(v.Row,null,p.default.createElement(v.Col,{md:12},this.section("overview",p.default.createElement("div",null,p.default.createElement("p",null,"As of ActionHero version ",p.default.createElement("code",null,"v8.0.0"),", you can create and include plugins for you ActionHero project.  Plugins are collections of ",p.default.createElement("code",null,"tasks"),", ",p.default.createElement("code",null,"actions"),", ",p.default.createElement("code",null,"servers"),", and ",p.default.createElement("code",null,"initializers")," that are collected as a module.  You can install plugins via NPM or keep them in a local path."),p.default.createElement("p",null,"Plugins are loaded after all local ActionHero project files, but initializers follow the same priority scheme as all other initializers."))),this.section("creating",p.default.createElement("div",null,p.default.createElement(k.default,{language:"bash"},"/\n| - actions\n| - tasks\n| - servers\n| - initializers\n| - scripts\n| - config\n|\n| - package.json\n"),p.default.createElement("p",null,"To create a plugin, create a project with the following structure:"),p.default.createElement("p",null,"This structure will allow elements to be loaded into ActionHero (we search ",p.default.createElement("code",null,"/actions")," for actions, ",p.default.createElement("code",null,"/tasks")," for tasks, etc)"),p.default.createElement("p",null,"When developing your plugin locally, you can load it into an existing ActionHero project to test it out."),p.default.createElement("p",null,"First, add the path your plugin is in to ",p.default.createElement("code",null,"api.config.general.paths.plugin"),".  If your ActionHero app is in ",p.default.createElement("code",null,"/var/ah/actionhero")," and your plugin is in ",p.default.createElement("code",null,"/var/ah/my_plugin"),", add ",p.default.createElement("code",null,"/var/ah")," to ",p.default.createElement("code",null,"api.config.general.paths.plugin")),p.default.createElement("p",null,p.default.createElement("strong",null,"Please use the npm naming convention ",p.default.createElement("code",null,"ah-(name)-plugin")," when uploading your plugin to npm")))),this.section("methods",p.default.createElement("div",null,p.default.createElement("p",null,'When creating plugins, you may find yourself wanting to do things which could normally be accomplished easily with a "top level" ActionHero project, but might be difficult from within the ',p.default.createElement("code",null,"node_modules")," folder.  Here are some helpers:"),p.default.createElement("h3",null,"Routes:"),p.default.createElement("ul",null,p.default.createElement("li",null,p.default.createElement("code",null,"api.routes.registerRoute(method, path, action, apiVersion, matchTrailingPathParts)"),p.default.createElement("ul",null,p.default.createElement("li",null,"Add a route to the system.")))))),this.section("examples",p.default.createElement("div",null,p.default.createElement("p",null,p.default.createElement("a",{href:"https://github.com/actionhero/ah-sample-plugin"},"You can view a sample plugin here")))),this.section("published",p.default.createElement("div",null,p.default.createElement("p",null,"You can view a list of plugins maintained by ",p.default.createElement("a",{href:"https://github.com/l0oky"},"@l0oky")," via ",p.default.createElement("a",{href:"https://github.com/l0oky/awesome-actionhero"},p.default.createElement("img",{src:"https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg",alt:"Awesome"}))))))))}}]),t}(E.default);t.default=P}},[1222]);
            return { page: comp.default }
          })
        