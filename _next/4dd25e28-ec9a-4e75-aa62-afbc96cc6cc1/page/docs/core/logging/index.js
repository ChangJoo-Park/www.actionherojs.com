
          window.__NEXT_REGISTER_PAGE('/docs/core/logging', function() {
            var comp = module.exports=webpackJsonp([25],{1221:function(e,t,l){e.exports=l(1222)},1222:function(e,t,l){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=l(9),n=i(o),a=l(1),r=i(a),u=l(8),s=i(u),c=l(2),m=i(c),f=l(3),d=i(f),_="/home/ubuntu/www.actionherojs.com/pages/docs/core/logging.js?entry",N=l(0),g=i(N),h=l(16),b=i(h),p=l(11),w=l(14),E=i(w),v=l(18),y=i(v),k=function(e){function t(e){(0,r.default)(this,t);var l=(0,m.default)(this,(t.__proto__||(0,n.default)(t)).call(this,e));return l.state={titleSection:{title:"Core: Logging",icon:"/static/images/ops-tools.svg"},sections:{overview:"Overview",defaults:"Defaults",levels:"Levels",methods:"Methods"},links:[{link:"/docs/core/plugins",title:"» Core: Plugins"},{link:"/docs/core/file-server",title:"« Core: File Server"}]},l}return(0,d.default)(t,e),(0,s.default)(t,[{key:"render",value:function(){return g.default.createElement(E.default,{sideNav:this.state.sections,titleSection:this.state.titleSection,links:this.state.links,currentSection:this.state.currentSection,__source:{fileName:_,lineNumber:69}},g.default.createElement(p.Row,{__source:{fileName:_,lineNumber:70}},g.default.createElement(p.Col,{md:12,__source:{fileName:_,lineNumber:71}},this.section("overview",g.default.createElement("div",{__source:{fileName:_,lineNumber:73}},g.default.createElement("p",{__source:{fileName:_,lineNumber:74}},"ActionHero uses the ",g.default.createElement("strong",{__source:{fileName:_,lineNumber:74}},g.default.createElement("a",{href:"https://github.com/flatiron/winston",__source:{fileName:_,lineNumber:74}},"Winston logger")),".  This allows for better, more customizable logging."))),this.section("defaults",g.default.createElement("div",{__source:{fileName:_,lineNumber:79}},g.default.createElement(y.default,{__source:{fileName:_,lineNumber:80}},"config.logger = {\n  transports: [\n    function(api){\n      return new (winston.transports.Console)({\n        colorize: true,\n        level: \"debug\",\n      });\n    },\n    function(api){\n      return new (winston.transports.File)({\n        filename: './log/' + api.pids.title + '.log',\n        level: \"info\",\n        timestamp: true,\n      });\n    }\n  ]\n};\n"),g.default.createElement("p",{__source:{fileName:_,lineNumber:81}},"In your ",g.default.createElement("code",{__source:{fileName:_,lineNumber:81}},"config/logger.js"),", you can customize which ",g.default.createElement("code",{__source:{fileName:_,lineNumber:81}},"transports")," you would like the logger to use. If none are provided, a default logger which only will print to stdout will be used.  See winston's documentation for all the logger types, but know that they include console, file, s3, riak, and more."),g.default.createElement("p",{__source:{fileName:_,lineNumber:82}},"You can set a transport directly, IE ",g.default.createElement("code",{__source:{fileName:_,lineNumber:82}},"new (winston.transports.Console)()")," or in a function which will be passed the ",g.default.createElement("code",{__source:{fileName:_,lineNumber:82}},"api")," object like the examples above.  The benefit of using the function invocation is you will have access to other methods and configuration options (like the title of the process)."))),this.section("levels",g.default.createElement("div",{__source:{fileName:_,lineNumber:87}},g.default.createElement(y.default,{__source:{fileName:_,lineNumber:88}},"api.log('hello'); // will use the default, 'info' level\napi.log('debug message', 'debug') // will not show up unless you have configured your logger in this NODE_ENV to be debug\napi.log('OH NO', 'emerg') // will show up in all logger levels\napi.log('the params were', 'info', data.params) // you can log objects too"),g.default.createElement("p",{__source:{fileName:_,lineNumber:89}},"Note that you can set a ",g.default.createElement("code",{__source:{fileName:_,lineNumber:89}},"level")," which indicates which level (and those above it) you wish to log per transport.  The log levels are:"),g.default.createElement("ul",{__source:{fileName:_,lineNumber:91}},g.default.createElement("li",{__source:{fileName:_,lineNumber:92}},"0=debug"),g.default.createElement("li",{__source:{fileName:_,lineNumber:93}},"1=info"),g.default.createElement("li",{__source:{fileName:_,lineNumber:94}},"2=notice"),g.default.createElement("li",{__source:{fileName:_,lineNumber:95}},"3=warning"),g.default.createElement("li",{__source:{fileName:_,lineNumber:96}},"4=error"),g.default.createElement("li",{__source:{fileName:_,lineNumber:97}},"5=crit"),g.default.createElement("li",{__source:{fileName:_,lineNumber:98}},"6=alert"),g.default.createElement("li",{__source:{fileName:_,lineNumber:99}},"7=emerg")),g.default.createElement("p",{__source:{fileName:_,lineNumber:102}},"You can customize these via ",g.default.createElement("code",{__source:{fileName:_,lineNumber:102}},"api.config.logger.levels")," and ",g.default.createElement("code",{__source:{fileName:_,lineNumber:102}},"api.config.logger.colors"),".  See ",g.default.createElement("a",{href:"https://github.com/winstonjs/winston#using-custom-logging-levels",__source:{fileName:_,lineNumber:102}},"Winston's documenation for more information")),g.default.createElement("p",{__source:{fileName:_,lineNumber:103}},'For example, if you set the logger\'s level to "notice", you would also see "crit" messages, but not "debug" messages.'),g.default.createElement("p",{__source:{fileName:_,lineNumber:104}},"To invoke the logger from your code, use: ",g.default.createElement("code",{__source:{fileName:_,lineNumber:104}},"api.log(message, severity, metadata)")))),this.section("methods",g.default.createElement("div",{__source:{fileName:_,lineNumber:109}},g.default.createElement("p",{__source:{fileName:_,lineNumber:110}},g.default.createElement("code",{__source:{fileName:_,lineNumber:110}},"api.logger.log")," and ",g.default.createElement("code",{__source:{fileName:_,lineNumber:110}},"api.logger[severity]")," also exist which allow you to call and modify the Winston instance directly."),g.default.createElement("p",{__source:{fileName:_,lineNumber:111}},g.default.createElement("code",{__source:{fileName:_,lineNumber:111}},"api.log")," will pass your message to all transports."),g.default.createElement("h3",{__source:{fileName:_,lineNumber:113}},g.default.createElement("code",{__source:{fileName:_,lineNumber:113}},"api.log(message, severity, metadata)")),g.default.createElement(y.default,{__source:{fileName:_,lineNumber:115}},"// the most basic use.  Will assume 'info' as the severity\napi.log('hello');\n\n// custom severity\napi.log('OH NO!', 'warning');\n\n// custom severity with a metadata object\napi.log('OH NO, something went wrong', 'warning', { error: new Error('things are busted') });\n"))))))}}]),t}(b.default);t.default=k}},[1221]);
            return { page: comp.default }
          })
        