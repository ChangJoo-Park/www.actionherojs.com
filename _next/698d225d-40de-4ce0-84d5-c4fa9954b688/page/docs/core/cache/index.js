
          window.__NEXT_REGISTER_PAGE('/docs/core/cache', function() {
            var comp = module.exports=webpackJsonp([33],{1205:function(e,l,t){e.exports=t(1206)},1206:function(e,l,t){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(l,"__esModule",{value:!0});var r=t(9),i=a(r),c=t(1),u=a(c),n=t(8),m=a(n),o=t(2),s=a(o),f=t(3),d=a(f),_="/home/ubuntu/www.actionherojs.com/pages/docs/core/cache.js?entry",N=t(0),b=a(N),h=t(16),E=a(h),p=t(11),k=t(14),w=a(k),y=function(e){function l(e){(0,u.default)(this,l);var t=(0,s.default)(this,(l.__proto__||(0,i.default)(l)).call(this,e));return t.state={titleSection:{title:"Core: Cache",icon:"/static/images/video-game-servers.svg"},sections:{overview:"Overview","cache-methods":"Cache Methods","list-methods":"List Methods","lock-methods":"Lock Methods",redis:"Redis & Cache"},links:[{link:"/docs/core/chat",title:"» Core: Chat"},{link:"/docs/core/action-cluster",title:"« Core: Action Cluster"}]},t}return(0,d.default)(l,e),(0,m.default)(l,[{key:"render",value:function(){return b.default.createElement(w.default,{sideNav:this.state.sections,titleSection:this.state.titleSection,links:this.state.links,currentSection:this.state.currentSection,__source:{fileName:_,lineNumber:31}},b.default.createElement(p.Row,{__source:{fileName:_,lineNumber:32}},b.default.createElement(p.Col,{md:12,__source:{fileName:_,lineNumber:33}},this.section("overview",b.default.createElement("div",{__source:{fileName:_,lineNumber:35}},b.default.createElement("p",{__source:{fileName:_,lineNumber:36}},"ActionHero ships with the functions needed for a distributed key-value cache.  You can cache strings, numbers, arrays and objects (anything that responds to ",b.default.createElement("code",{__source:{fileName:_,lineNumber:36}},"JSON.stringify"),")."),b.default.createElement("p",{__source:{fileName:_,lineNumber:37}},"The cache's redis server is defined by ",b.default.createElement("code",{__source:{fileName:_,lineNumber:37}},"api.config.redis"),".  It is possible to use fakeredis."))),this.section("cache-methods",b.default.createElement("div",{__source:{fileName:_,lineNumber:42}},b.default.createElement("h3",{__source:{fileName:_,lineNumber:43}},b.default.createElement("code",{__source:{fileName:_,lineNumber:43}},"api.cache.save")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:45}},b.default.createElement("li",{__source:{fileName:_,lineNumber:46}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:46}},"api.cache.save(key, value, expireTimeMS, next)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:47}},b.default.createElement("li",{__source:{fileName:_,lineNumber:48}},b.default.createElement("code",{__source:{fileName:_,lineNumber:48}},"expireTimeMS")," can be null if you never want the object to expire"))),b.default.createElement("li",{__source:{fileName:_,lineNumber:51}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:51}},"next(error, newObject)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:52}},b.default.createElement("li",{__source:{fileName:_,lineNumber:53}},b.default.createElement("code",{__source:{fileName:_,lineNumber:53}},"error")," will be null unless the object can't be saved (perhaps out of ram or a bad object type)."),b.default.createElement("li",{__source:{fileName:_,lineNumber:54}},"overwriting an existing object will return ",b.default.createElement("code",{__source:{fileName:_,lineNumber:54}},"newObject = true"))))),b.default.createElement("p",{__source:{fileName:_,lineNumber:59}},b.default.createElement("code",{__source:{fileName:_,lineNumber:59}},"api.cache.save")," is used to both create new entries or update existing cache entries.  If you don't define an expireTimeMS, ",b.default.createElement("code",{__source:{fileName:_,lineNumber:59}},"null")," will be assumed, and using ",b.default.createElement("code",{__source:{fileName:_,lineNumber:59}},"null")," will cause this cached item to never expire.  Expired cache objects will be periodically swept away (but not necessarily exactly when they expire)"),b.default.createElement("h3",{__source:{fileName:_,lineNumber:61}},b.default.createElement("code",{__source:{fileName:_,lineNumber:61}},"api.cache.load")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:63}},b.default.createElement("li",{__source:{fileName:_,lineNumber:64}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:64}},"api.cache.load(key, next)")," or ",b.default.createElement("code",{__source:{fileName:_,lineNumber:64}},"api.cache.load(key, options, next)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:65}},b.default.createElement("li",{__source:{fileName:_,lineNumber:66}},b.default.createElement("code",{__source:{fileName:_,lineNumber:66}},"options")," can be ",b.default.createElement("code",{__source:{fileName:_,lineNumber:66}},"{expireTimeMS: 1234}")," where the act of reading the key will reset the key's expire time"),b.default.createElement("li",{__source:{fileName:_,lineNumber:67}},"If the requested ",b.default.createElement("code",{__source:{fileName:_,lineNumber:67}},"key")," is not found (or is expired), all values returned will be null."))),b.default.createElement("li",{__source:{fileName:_,lineNumber:70}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:70}},"next(error, value, expireTimestamp, createdAt, readAt)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:71}},b.default.createElement("li",{__source:{fileName:_,lineNumber:72}},b.default.createElement("code",{__source:{fileName:_,lineNumber:72}},"value")," will be the object which was saved and ",b.default.createElement("code",{__source:{fileName:_,lineNumber:72}},"null")," if the object cannot be found or is expired"),b.default.createElement("li",{__source:{fileName:_,lineNumber:73}},b.default.createElement("code",{__source:{fileName:_,lineNumber:73}},"expireTimestamp")," (ms) is when the object is set to expire in system time"),b.default.createElement("li",{__source:{fileName:_,lineNumber:74}},b.default.createElement("code",{__source:{fileName:_,lineNumber:74}},"createdAt")," (ms) is when the object was created"),b.default.createElement("li",{__source:{fileName:_,lineNumber:75}},b.default.createElement("code",{__source:{fileName:_,lineNumber:75}},"readAt")," (ms) is the timestamp at which the object was last read with ",b.default.createElement("code",{__source:{fileName:_,lineNumber:75}},"api.cache.load"),".  Useful for telling if another worker has consumed the object recently")))),b.default.createElement("h3",{__source:{fileName:_,lineNumber:80}},b.default.createElement("code",{__source:{fileName:_,lineNumber:80}},"api.cache.destroy")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:82}},b.default.createElement("li",{__source:{fileName:_,lineNumber:83}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:83}},"api.cache.destroy(key)")),b.default.createElement("li",{__source:{fileName:_,lineNumber:84}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:84}},"next(error, destroyed)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:85}},b.default.createElement("li",{__source:{fileName:_,lineNumber:86}},"will be false if the object cannot be found, and true if destroyed")))))),this.section("list-methods",b.default.createElement("div",{__source:{fileName:_,lineNumber:94}},b.default.createElement("p",{__source:{fileName:_,lineNumber:95}},b.default.createElement("code",{__source:{fileName:_,lineNumber:95}},"api.cache")," implements a distributed shared list.  3 simple functions are provided to interact with this list, ",b.default.createElement("code",{__source:{fileName:_,lineNumber:95}},"push"),", ",b.default.createElement("code",{__source:{fileName:_,lineNumber:95}},"pop"),", and ",b.default.createElement("code",{__source:{fileName:_,lineNumber:95}},"listLength"),".  These lists are stored in Redis, and cannot be locked.  That said, a ",b.default.createElement("code",{__source:{fileName:_,lineNumber:95}},"push")," and ",b.default.createElement("code",{__source:{fileName:_,lineNumber:95}},"pop")," operation will guarantee that one-and-only-one copy of your data is returned to whichever application acted first (when popping) or an error will be returned (when pushing)."),b.default.createElement("h3",{__source:{fileName:_,lineNumber:97}},b.default.createElement("code",{__source:{fileName:_,lineNumber:97}},"api.cache.push")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:99}},b.default.createElement("li",{__source:{fileName:_,lineNumber:100}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:100}},"api.cache.push(key, data, next)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:101}},b.default.createElement("li",{__source:{fileName:_,lineNumber:102}},"data must be serializable via JSON.stringify"))),b.default.createElement("li",{__source:{fileName:_,lineNumber:105}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:105}},"next(error)"))),b.default.createElement("h3",{__source:{fileName:_,lineNumber:108}},b.default.createElement("code",{__source:{fileName:_,lineNumber:108}},"api.cache.pop")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:110}},b.default.createElement("li",{__source:{fileName:_,lineNumber:111}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:111}},"api.cache.pop(key, next)")),b.default.createElement("li",{__source:{fileName:_,lineNumber:112}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:112}},"next(error, data)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:113}},b.default.createElement("li",{__source:{fileName:_,lineNumber:114}},"data will be returned in the object form it was saved (array, object, string)")))),b.default.createElement("h3",{__source:{fileName:_,lineNumber:119}},b.default.createElement("code",{__source:{fileName:_,lineNumber:119}},"api.cache.listLength")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:121}},b.default.createElement("li",{__source:{fileName:_,lineNumber:122}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:122}},"api.cache.listLength(key, next)")),b.default.createElement("li",{__source:{fileName:_,lineNumber:123}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:123}},"next(error, length)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:124}},b.default.createElement("li",{__source:{fileName:_,lineNumber:125}},"length will be an integer.",b.default.createElement("ul",{__source:{fileName:_,lineNumber:126}},b.default.createElement("li",{__source:{fileName:_,lineNumber:127}},"if the list does not exist, ",b.default.createElement("code",{__source:{fileName:_,lineNumber:127}},"0")," will be returned")))))))),this.section("lock-methods",b.default.createElement("div",{__source:{fileName:_,lineNumber:137}},b.default.createElement("p",{__source:{fileName:_,lineNumber:138}},"You may optionally implement locking methods along with your cache objects.  This will allow one ActionHero server to obtain a lock on an object and prevent modification of it by another member of the cluster.  For example you may want to first ",b.default.createElement("code",{__source:{fileName:_,lineNumber:138}},"api.cache.lock")," a key, and then save it to prevent other nodes from modifying the object."),b.default.createElement("h3",{__source:{fileName:_,lineNumber:140}},b.default.createElement("code",{__source:{fileName:_,lineNumber:140}},"api.cache.lock")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:142}},b.default.createElement("li",{__source:{fileName:_,lineNumber:143}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:143}},"api.cache.lock(key, expireTimeMS, next)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:144}},b.default.createElement("li",{__source:{fileName:_,lineNumber:145}},b.default.createElement("code",{__source:{fileName:_,lineNumber:145}},"expireTimeMS")," is optional, and will be ",b.default.createElement("code",{__source:{fileName:_,lineNumber:145}},"expireTimeMS = api.cache.lockDuration = api.config.general.lockDuration")))),b.default.createElement("li",{__source:{fileName:_,lineNumber:148}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:148}},"next(error, lockOk)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:149}},b.default.createElement("li",{__source:{fileName:_,lineNumber:150}},b.default.createElement("code",{__source:{fileName:_,lineNumber:150}},"error")," will be null unless there was something wrong with the connection (perhaps a redis error)"),b.default.createElement("li",{__source:{fileName:_,lineNumber:151}},b.default.createElement("code",{__source:{fileName:_,lineNumber:151}},"lockOk")," will be ",b.default.createElement("code",{__source:{fileName:_,lineNumber:151}},"true")," or ",b.default.createElement("code",{__source:{fileName:_,lineNumber:151}},"false")," depending on if the lock was obtained.")))),b.default.createElement("h3",{__source:{fileName:_,lineNumber:156}},b.default.createElement("code",{__source:{fileName:_,lineNumber:156}},"api.cache.unlock")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:158}},b.default.createElement("li",{__source:{fileName:_,lineNumber:159}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:159}},"api.cache.unlock(key, next)")),b.default.createElement("li",{__source:{fileName:_,lineNumber:160}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:160}},"next(error, lockOk)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:161}},b.default.createElement("li",{__source:{fileName:_,lineNumber:162}},b.default.createElement("code",{__source:{fileName:_,lineNumber:162}},"error")," will be null unless there was something wrong with the connection (perhaps a redis error)"),b.default.createElement("li",{__source:{fileName:_,lineNumber:163}},b.default.createElement("code",{__source:{fileName:_,lineNumber:163}},"lockOk")," will be ",b.default.createElement("code",{__source:{fileName:_,lineNumber:163}},"true")," or ",b.default.createElement("code",{__source:{fileName:_,lineNumber:163}},"false")," depending on if the lock was removed.")))),b.default.createElement("h3",{__source:{fileName:_,lineNumber:168}},b.default.createElement("code",{__source:{fileName:_,lineNumber:168}},"api.cache.checkLock")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:170}},b.default.createElement("li",{__source:{fileName:_,lineNumber:171}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:171}},"api.cache.checkLock(key,retry, next)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:172}},b.default.createElement("li",{__source:{fileName:_,lineNumber:173}},b.default.createElement("code",{__source:{fileName:_,lineNumber:173}},"retry")," is either ",b.default.createElement("code",{__source:{fileName:_,lineNumber:173}},"null")," or an integer (ms) that we should keep retrying until the lock is free to be re-obtained"))),b.default.createElement("li",{__source:{fileName:_,lineNumber:176}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:176}},"next(error, lockOk)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:177}},b.default.createElement("li",{__source:{fileName:_,lineNumber:178}},b.default.createElement("code",{__source:{fileName:_,lineNumber:178}},"error")," will be null unless there was something wrong with the connection (perhaps a redis error)"),b.default.createElement("li",{__source:{fileName:_,lineNumber:179}},b.default.createElement("code",{__source:{fileName:_,lineNumber:179}},"lockOk")," will be ",b.default.createElement("code",{__source:{fileName:_,lineNumber:179}},"true")," or ",b.default.createElement("code",{__source:{fileName:_,lineNumber:179}},"false")," depending on if the lock is currently obtainable.")))),b.default.createElement("h3",{__source:{fileName:_,lineNumber:184}},b.default.createElement("code",{__source:{fileName:_,lineNumber:184}},"api.cache.locks")),b.default.createElement("ul",{__source:{fileName:_,lineNumber:186}},b.default.createElement("li",{__source:{fileName:_,lineNumber:187}},"Invoke: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:187}},"api.cache.locks(next)")),b.default.createElement("li",{__source:{fileName:_,lineNumber:188}},"Callback: ",b.default.createElement("code",{__source:{fileName:_,lineNumber:188}},"next(error, locks)"),b.default.createElement("ul",{__source:{fileName:_,lineNumber:189}},b.default.createElement("li",{__source:{fileName:_,lineNumber:190}},b.default.createElement("code",{__source:{fileName:_,lineNumber:190}},"locks")," is an array of all currently active locks")))),b.default.createElement("p",{__source:{fileName:_,lineNumber:195}},"You can see an example of using the cache within an action in ",b.default.createElement("a",{href:"https://github.com/actionhero/actionhero/blob/master/actions/cacheTest.js",__source:{fileName:_,lineNumber:195}},"actions/cacheTest.js")))),this.section("redis",b.default.createElement("div",{__source:{fileName:_,lineNumber:201}},b.default.createElement("p",{__source:{fileName:_,lineNumber:202}},"The timestamps regarding ",b.default.createElement("code",{__source:{fileName:_,lineNumber:202}},"api.cache.load")," are to help clients understand if they are working with data which has been modified by another peer (when running in a cluster)."),b.default.createElement("p",{__source:{fileName:_,lineNumber:203}},"Keep in mind that many clients/servers can access a cached value simultaneously, so build your actions carefully not to have conflicting state.  You can ",b.default.createElement("a",{href:"/docs/core/cache",__source:{fileName:_,lineNumber:203}},"learn more about the cache methods here"),".  You can also ",b.default.createElement("a",{href:"docs/ops/production-notes",__source:{fileName:_,lineNumber:203}},"review recommendations about Production Redis configurations"),"."))))))}}]),l}(E.default);l.default=y}},[1205]);
            return { page: comp.default }
          })
        